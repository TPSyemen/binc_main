# Generated by Django 5.2.4 on 2025-07-07 06:53

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('discount_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed_amount', 'Fixed Amount'), ('buy_one_get_one', 'Buy One Get One')], max_length=20)),
                ('value', models.DecimalField(decimal_places=2, help_text='Percentage (0-100) or fixed amount', max_digits=10)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('max_uses', models.PositiveIntegerField(blank=True, help_text='Maximum number of times this promotion can be used', null=True)),
                ('max_uses_per_user', models.PositiveIntegerField(default=1, help_text='Maximum uses per user')),
                ('current_uses', models.PositiveIntegerField(default=0)),
                ('minimum_order_amount', models.DecimalField(decimal_places=2, default=0, help_text='Minimum order amount to apply promotion', max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applicable_stores', models.ManyToManyField(blank=True, help_text='Stores where this promotion is valid (empty = all stores)', to='products.store')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_promotions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'promotions',
            },
        ),
        migrations.CreateModel(
            name='DiscountQR',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_used', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField()),
                ('digital_receipt_data', models.JSONField(help_text='Detailed cart info including items from different stores')),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('generated_by_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_qr_codes', to=settings.AUTH_USER_MODEL)),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qr_codes', to='promotions.promotion')),
            ],
            options={
                'db_table': 'discount_qr_codes',
            },
        ),
        migrations.CreateModel(
            name='PromotionUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('used_at', models.DateTimeField(auto_now_add=True)),
                ('discount_qr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='promotions.discountqr')),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_logs', to='promotions.promotion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'promotion_usage',
            },
        ),
        migrations.CreateModel(
            name='StoreDiscountUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_used_by_store', models.BooleanField(default=False)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('store_cart_total', models.DecimalField(decimal_places=2, help_text="Total amount for this store's items", max_digits=10)),
                ('discount_applied', models.DecimalField(decimal_places=2, help_text='Actual discount amount applied for this store', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('discount_qr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='store_usages', to='promotions.discountqr')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.store')),
                ('validated_by', models.ForeignKey(blank=True, help_text='Store owner who validated this discount', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'store_discount_usage',
            },
        ),
        migrations.AddIndex(
            model_name='promotion',
            index=models.Index(fields=['is_active', 'start_date', 'end_date'], name='promotions_is_acti_dbec31_idx'),
        ),
        migrations.AddIndex(
            model_name='promotion',
            index=models.Index(fields=['created_by'], name='promotions_created_30efee_idx'),
        ),
        migrations.AddIndex(
            model_name='discountqr',
            index=models.Index(fields=['generated_by_user', 'generated_at'], name='discount_qr_generat_bf8415_idx'),
        ),
        migrations.AddIndex(
            model_name='discountqr',
            index=models.Index(fields=['promotion', 'is_used'], name='discount_qr_promoti_2f430b_idx'),
        ),
        migrations.AddIndex(
            model_name='discountqr',
            index=models.Index(fields=['expires_at'], name='discount_qr_expires_d2fd7b_idx'),
        ),
        migrations.AddIndex(
            model_name='promotionusage',
            index=models.Index(fields=['promotion', 'used_at'], name='promotion_u_promoti_078a3d_idx'),
        ),
        migrations.AddIndex(
            model_name='promotionusage',
            index=models.Index(fields=['user', 'used_at'], name='promotion_u_user_id_59d89b_idx'),
        ),
        migrations.AddIndex(
            model_name='storediscountusage',
            index=models.Index(fields=['discount_qr', 'is_used_by_store'], name='store_disco_discoun_6dc855_idx'),
        ),
        migrations.AddIndex(
            model_name='storediscountusage',
            index=models.Index(fields=['store', 'used_at'], name='store_disco_store_i_bd762b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='storediscountusage',
            unique_together={('discount_qr', 'store')},
        ),
    ]
