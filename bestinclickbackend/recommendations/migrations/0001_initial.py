# Generated by Django 5.2.4 on 2025-07-07 06:53

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RecommendationSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('recommendation_type', models.CharField(choices=[('general', 'General Recommendations'), ('personalized', 'Personalized Recommendations'), ('similar', 'Similar Products'), ('trending', 'Trending Products'), ('collaborative', 'Collaborative Filtering'), ('content_based', 'Content-Based Filtering')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'recommendation_sessions',
            },
        ),
        migrations.CreateModel(
            name='RecommendationResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(help_text='Recommendation confidence score (0-1)')),
                ('position', models.PositiveIntegerField(help_text='Position in recommendation list')),
                ('algorithm_used', models.CharField(help_text='Algorithm that generated this recommendation', max_length=100)),
                ('was_clicked', models.BooleanField(default=False)),
                ('was_added_to_cart', models.BooleanField(default=False)),
                ('was_purchased', models.BooleanField(default=False)),
                ('click_timestamp', models.DateTimeField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='recommendations.recommendationsession')),
            ],
            options={
                'db_table': 'recommendation_results',
            },
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_range_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_range_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('preference_score', models.FloatField(help_text='Learned preference strength (-1 to 1)')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.brand')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_preferences',
            },
        ),
        migrations.AddIndex(
            model_name='recommendationsession',
            index=models.Index(fields=['user', 'created_at'], name='recommendat_user_id_19356b_idx'),
        ),
        migrations.AddIndex(
            model_name='recommendationsession',
            index=models.Index(fields=['session_id'], name='recommendat_session_e4628a_idx'),
        ),
        migrations.AddIndex(
            model_name='recommendationresult',
            index=models.Index(fields=['session', 'position'], name='recommendat_session_f51314_idx'),
        ),
        migrations.AddIndex(
            model_name='recommendationresult',
            index=models.Index(fields=['product', 'score'], name='recommendat_product_5632d2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='recommendationresult',
            unique_together={('session', 'product')},
        ),
        migrations.AddIndex(
            model_name='userpreference',
            index=models.Index(fields=['user', 'preference_score'], name='user_prefer_user_id_0ba49d_idx'),
        ),
    ]
