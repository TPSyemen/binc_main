# Generated by Django 5.0.1 on 2025-08-17 03:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0005_productreview_unique_user_product_review'),
        ('recommendations', '0002_alter_userpreference_price_range_max_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductInteractionScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_views', models.PositiveIntegerField(default=0)),
                ('unique_views', models.PositiveIntegerField(default=0)),
                ('avg_view_duration', models.FloatField(default=0.0)),
                ('total_likes', models.PositiveIntegerField(default=0)),
                ('total_unlikes', models.PositiveIntegerField(default=0)),
                ('like_ratio', models.FloatField(default=0.0)),
                ('total_cart_adds', models.PositiveIntegerField(default=0)),
                ('total_purchases', models.PositiveIntegerField(default=0)),
                ('conversion_rate', models.FloatField(default=0.0)),
                ('avg_rating', models.FloatField(default=0.0)),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('avg_sentiment', models.FloatField(default=0.0)),
                ('popularity_score', models.FloatField(default=0.0)),
                ('quality_score', models.FloatField(default=0.0)),
                ('trending_score', models.FloatField(default=0.0)),
                ('overall_score', models.FloatField(default=0.0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ai_interaction_score', to='products.product')),
            ],
            options={
                'db_table': 'product_interaction_scores',
                'indexes': [models.Index(fields=['overall_score'], name='product_int_overall_87da75_idx'), models.Index(fields=['popularity_score'], name='product_int_popular_5c038d_idx'), models.Index(fields=['trending_score'], name='product_int_trendin_e490ab_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserBehavior',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('behavior_type', models.CharField(choices=[('view', 'Product View'), ('like', 'Product Like'), ('unlike', 'Product Unlike'), ('cart_add', 'Add to Cart'), ('cart_remove', 'Remove from Cart'), ('purchase', 'Purchase'), ('review_positive', 'Positive Review'), ('review_negative', 'Negative Review'), ('wishlist_add', 'Add to Wishlist'), ('wishlist_remove', 'Remove from Wishlist'), ('share', 'Product Share'), ('compare', 'Product Compare'), ('search', 'Product Search')], max_length=20)),
                ('duration_seconds', models.PositiveIntegerField(blank=True, help_text='Time spent on product page', null=True)),
                ('rating', models.PositiveSmallIntegerField(blank=True, help_text='Rating given (1-5)', null=True)),
                ('review_sentiment', models.FloatField(blank=True, help_text='AI-analyzed sentiment (-1 to 1)', null=True)),
                ('search_query', models.CharField(blank=True, max_length=255, null=True)),
                ('referrer_page', models.CharField(blank=True, max_length=255, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_behaviors',
                'indexes': [models.Index(fields=['user', 'behavior_type', 'timestamp'], name='user_behavi_user_id_382018_idx'), models.Index(fields=['product', 'behavior_type'], name='user_behavi_product_120357_idx'), models.Index(fields=['session_id', 'timestamp'], name='user_behavi_session_ea18c8_idx'), models.Index(fields=['timestamp'], name='user_behavi_timesta_f7c28a_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserSimilarity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('similarity_score', models.FloatField(help_text='Cosine similarity score (0-1)')),
                ('common_products', models.PositiveIntegerField(default=0)),
                ('last_calculated', models.DateTimeField(auto_now=True)),
                ('user1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='similarities_as_user1', to=settings.AUTH_USER_MODEL)),
                ('user2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='similarities_as_user2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_similarities',
                'indexes': [models.Index(fields=['user1', 'similarity_score'], name='user_simila_user1_i_a12e09_idx'), models.Index(fields=['similarity_score'], name='user_simila_similar_611877_idx')],
                'unique_together': {('user1', 'user2')},
            },
        ),
    ]
